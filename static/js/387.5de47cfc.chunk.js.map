{"version":3,"file":"static/js/387.5de47cfc.chunk.js","mappings":"qPAEaA,EAAWC,EAAAA,EAAAA,GAAH,4EAMRC,EAAQD,EAAAA,EAAAA,EAAH,kFAMLE,EAAOF,EAAAA,EAAAA,EAAH,kE,oICZJG,E,QAAaH,EAAAA,GAAH,2S,mBCmDvB,EA9CgB,WACd,OAA8BI,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0CH,EAAAA,EAAAA,WAAS,GAAnD,eAAOK,EAAP,KAAsBC,EAAtB,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACRD,GAAiB,GAEZH,IAILK,EAAAA,EAAAA,IAAgBL,GACbM,MAAK,SAAAC,GACJ,GAAIA,EAASC,QAAQC,OAAS,EAG5B,OAFAV,EAAW,WACXI,GAAiB,GAGnBJ,EAAWQ,EAASC,SACpBL,GAAiB,EAClB,IACAO,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,CAACX,KAGF,gCACGF,GACC,wBACGA,EAAQgB,KAAI,SAAAC,GACX,OACE,UAACnB,EAAD,YACE,uBAAImB,EAAOC,UACX,uBAAID,EAAOE,YAFIF,EAAOG,GAK3B,OAGH,SAAC,KAAD,UAAM,4CAEPhB,IAAiB,SAACiB,EAAA,EAAD,MAGvB,C,kMChDKC,EAAW,gCACXC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,cACE,6NACFC,OAAQ,qBAICC,EAAc,mCAAG,oGACLC,EAAAA,EAAAA,IAAA,UAClBP,EADkB,qCAErBC,GAH0B,cACtBd,EADsB,yBAKrBA,EAASqB,MALY,2CAAH,qDAQdC,EAAc,mCAAG,WAAMC,GAAN,uFACLH,EAAAA,EAAAA,IAAA,UAClBP,EADkB,8BACYU,EADZ,WAErBT,GAH0B,cACtBd,EADsB,yBAKrBA,EAASqB,MALY,2CAAH,sDAQdG,EAAY,mCAAG,WAAM/B,GAAN,uFACH2B,EAAAA,EAAAA,IAAA,UAAaP,EAAb,iBAA8BpB,GAAWqB,GADtC,cACpBd,EADoB,yBAEnBA,EAASqB,MAFU,2CAAH,sDAKZI,EAAgB,mCAAG,WAAMhC,GAAN,uFACP2B,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDpB,EADC,YAErBqB,GAH4B,cACxBd,EADwB,yBAKvBA,EAASqB,MALc,2CAAH,sDAQhBvB,EAAe,mCAAG,WAAML,GAAN,uFACN2B,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDpB,EADC,YAErBqB,GAH2B,cACvBd,EADuB,yBAKtBA,EAASqB,MALa,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const Actor = styled.p`\n  width: 150px;\n  text-align: center;\n  margin: 5px 0;\n`;\n\nexport const Info = styled.p`\n  font-weight: 600;\n  margin-left: 40px;\n`;\n","import styled from '@emotion/styled';\n\nexport const ReviewItem = styled.li`\n  width: 95%;\n  text-align: justify;\n  padding: 10px;\n  margin-bottom: 8px;\n  border-radius: 4px;\n  background-color: rgb(230, 230, 230);\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../../services/api';\nimport Loader from '../Loader/Loader';\nimport { ReviewItem } from './Reviews.styled';\nimport { Info } from '../Cast/Cast.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n  const [visibleLoader, setVisibleLoader] = useState(false);\n\n  useEffect(() => {\n    setVisibleLoader(true);\n\n    if (!movieId) {\n      return;\n    }\n\n    getMovieReviews(movieId)\n      .then(response => {\n        if (response.results.length < 1) {\n          setReviews(null);\n          setVisibleLoader(false);\n          return;\n        }\n        setReviews(response.results);\n        setVisibleLoader(false);\n      })\n      .catch(err => console.error(err));\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews ? (\n        <ul>\n          {reviews.map(review => {\n            return (\n              <ReviewItem key={review.id}>\n                <p>{review.author}</p>\n                <p>{review.content}</p>\n              </ReviewItem>\n            );\n          })}\n        </ul>\n      ) : (\n        <Info>We don't have any reviews to this movie</Info>\n      )}\n      {visibleLoader && <Loader />}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\n//const API_KEY = '265f78c728b685275d7bdd6274612da2';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst options = {\n  method: 'GET',\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiMTZlYWZhMmEzOTE3ZDU3ZGQzMGRhOTZhOWQxOTg5MCIsInN1YiI6IjY0ODgzZjcyZTI3MjYwMDBjOTMyMjM2YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.XdPSLtTSAZv4fw0M0gYehYEL9mjnuAiltEwvVoL-DaE',\n    accept: 'application/json',\n  },\n};\n\nexport const getTrendMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\nexport const getSearchMovie = async movieName => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${movieName}&page=1`,\n    options\n  );\n  return response.data;\n};\n\nexport const getMovieItem = async movieId => {\n  const response = await axios.get(`${BASE_URL}movie/${movieId}`, options);\n  return response.data;\n};\n\nexport const getMovieCastInfo = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits`,\n    options\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    options\n  );\n  return response.data;\n};\n"],"names":["CastList","styled","Actor","Info","ReviewItem","useState","reviews","setReviews","movieId","useParams","visibleLoader","setVisibleLoader","useEffect","getMovieReviews","then","response","results","length","catch","err","console","error","map","review","author","content","id","Loader","BASE_URL","options","method","headers","Authorization","accept","getTrendMovies","axios","data","getSearchMovie","movieName","getMovieItem","getMovieCastInfo"],"sourceRoot":""}